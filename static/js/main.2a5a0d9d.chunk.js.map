{"version":3,"sources":["components/Button.js","components/Choice.js","utils/gender.js","components/Header.js","components/YoutubeEmbed.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","console","log","style","backgroundColor","className","defaultProps","Choice","title","propTypes","PropTypes","string","isRequired","gender","name","id","Header","useState","Array","length","fill","checkedState","setCheckedState","class","map","index","type","value","checked","onChange","position","updatedCheckedState","item","handleOnChange","htmlFor","handleOnChange2","hover","to","pathname","state","foo","disabled","YoutubeEmbed","props","location","width","url","button","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a5a0d9d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nconst Button = ({color , text}) => {\n    const onClick = () => {\n        console.log('click')\n    }\n    return (\n        <button\n            onClick={onClick}\n            style={{backgroundColor: color}}\n            className='btn'\n        >\n            {text}\n        </button>\n    )\n}\nButton.defaultProps = {\n    color: 'steelblue'\n}\nexport default Button\nButton.propTypes={\n    text: PropTypes.string,\n    color: PropTypes.string\n}\n","import PropTypes from 'prop-types'\n\nconst Choice = ({text}) => {\n    return (\n        <>\n           {text}\n        </>\n    )\n}\n\nChoice.defaultProps = {\n    title: 'default title'\n}\nChoice.propTypes = {\n    title: PropTypes.string.isRequired,\n}\nexport default Choice\n","export const gender = [\n    {\n      name: \"Homme\",\n      id: 0\n    },\n    {\n      name: \"Femme\",\n      id: 0\n    },\n     {\n      name: \"pied\",\n      id: 0\n    },\n    {\n      name: \"voiture\",\n      id: 0\n    },\n    \n  ];","\nimport Button from './Button'\nimport PropTypes from 'prop-types'\nimport Choice from './Choice'\nimport { useState } from 'react'\nimport { gender } from \"../utils/gender\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = ({ title }) => {\n    const [checkedState, setCheckedState] = useState(\n        new Array(gender.length).fill(false)\n    );\n//pour les 2 premiers boxes: crocher/decrocher juste un seule box et decrocher l autre \n    const handleOnChange = (position) => {\n        const updatedCheckedState = checkedState.map((item, index) =>\n            index === position ? !item : (index < 2 ? false : item)\n        );\n        setCheckedState(updatedCheckedState);\n    };\n//pour les 2 derniers boxes: crocher/decrocher le box clique et lesser les autres ils sont \n\n    const handleOnChange2 = (position) => {\n        const updatedCheckedState = checkedState.map((item, index) =>\n            index === position ? !item : item\n        );\n        setCheckedState(updatedCheckedState);\n    };\n    return (\n        <header >\n            {<h1 className='h3_title'>  {title}</h1>}\n            <span className='flexDiv'>\n                <div class=\"left\">\n                    <Choice text='Je suis' />\n                </div>\n                {\n                    gender.map(({ id, name }, index) => {\n                        if (index < 2)\n                            return (\n                                <div className=\"middle\">\n                                    <input\n                                        type=\"checkbox\"\n                                        id={`custom-checkbox-${index}`}\n                                        name={name}\n                                        value={name}\n                                        checked={checkedState[index]}\n                                        onChange={() => handleOnChange(index)}\n                                    />\n                                    <label htmlFor={`custom-checkbox-${index}`}> <a> {name}</a></label>\n                                </div>\n                            );\n                        return (\n                            <div></div>\n                        )\n                    }\n                    )\n                }\n            </span>\n            <span className='flexDiv'>\n\n                <div class=\"left\">\n                    <Choice text='Je me dÃ©place' />\n                </div>\n                {\n                    gender.map(({ id, name }, index) => {\n                        if (index >= 2)\n                            return (\n                                <div className=\"middle\">\n                                    <input\n                                        type=\"checkbox\"\n                                        id={`custom-checkbox-${index}`}\n                                        name={name}\n                                        value={name}\n                                        checked={checkedState[index]}\n                                        onChange={() => handleOnChange2(index)}\n                                    />\n                                    <label hover=\"green\" htmlFor={`custom-checkbox-${index}`}> <a> {name}</a> </label>\n                                </div>\n                            );\n                        return (\n                            <div></div>\n                        )\n                    }\n                    )\n                }\n            </span>\n            {\n                //very sorry for this mess, its 2 am and the deadline is this morning\n                \n                //homme\n                checkedState[0] &&\n                //voiture\n                ((checkedState[3] &&\n                    <Link\n                        to={{ pathname: \"/YoutubeEmbed\", state: { foo: \"GKgoqO3GIBg\" } }}>\n                        <Button disabled={true} color='green' text=\"C'est parti !\" />\n                    </Link>)\n                    //pieds\n                    || (checkedState[2]) &&\n                    <Link\n                        to={{ pathname: \"/YoutubeEmbed\", state: { foo: \"wBqM2ytqHY4\" } }}>\n                        <Button disabled={true} color='green' text=\"C'est parti !\" />\n                    </Link>) ||\n                //femme\n                (checkedState[1] &&\n                    //voiture\n                    ((checkedState[3] &&\n                        <Link\n                            to={{ pathname: \"/YoutubeEmbed\", state: { foo: \"gtBt1j6RjKA\" } }}>\n                            <Button disabled={true} color='green' text=\"C'est parti !\" />\n                        </Link>)\n                    //pieds\n                    || ((checkedState[2]) &&\n                    <Link\n                        to={{ pathname: \"/YoutubeEmbed\", state: { foo: \"m4VH2mW0nac\" } }}>\n                        <Button disabled={true} color='green' text=\"C'est parti !\" />\n                    </Link>))) ||\n            <Button disabled={true} color='grey' text=\"C'est parti !\" />\n            }\n        </header>\n    )\n}\n\n\nHeader.defaultProps = {\n    title: 'DÃ©couvrez-vous en vidÃ©o'\n}\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n// const headingStyle = { \n//     color: 'red',\n//      backgroundColor:'black'}\nexport default Header\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\"\nimport {Link} from \"react-router-dom\"\nimport ReactPlayer from \"react-player\"\n\nconst YoutubeEmbed = (props) => {\n  const {foo} = props.location.state\n// console.log(foo) // \"bar\"\n  return (\n    <div>\n      <ReactPlayer   width='500px'\n        \n        url={`https://www.youtube.com/watch?v=${foo}`}\n      />\n      <Link to=\"/\">\n        <Button button=\"green\" text=\"retour\"/>\n      </Link>\n    </div>\n  )\n}\n\nexport default YoutubeEmbed\n\n\nYoutubeEmbed.propTypes = {\n  embedId: PropTypes.string.isRequired\n};\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from './components/Header'\nimport YoutubeEmbed from \"./components/YoutubeEmbed\";\n \nfunction App() {\n  return (\n    <Router>\n      <Switch>\n      <div className=\"container\">\n        <Route path=\"/YoutubeEmbed\" component={YoutubeEmbed} />\n        <Route path=\"/\" exact component={Header} />\n    </div>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}